#set($menu = $menucode)
#set($pcode = $projectcode)
#set($masterGridcode = $projectMasterGridcode)
#set($detailGridcode = $projectDetailGridcode)
#set($masterTableName = $projectMasterTableName)
#set($masterPrimary = $projectMasterPrimary)
#set($detailTableName = $projectDetailTableName)
#set($detailPrimary = $projectDetailPrimary)
#set($appendEntry = $projectAppendEntry)
#set($editEntry = $projectEditEntry)
#set($dblclickEntry = $projectDblclickEntry)
#set($norQueryForm = $projectNorQueryForm)
#set($moduleid = $mainModuleid)
var masterDtlGridIntf;
var advquery;
LayoutExt = function(){
      return {
          init: function(){
          //   Ext.state.Manager.setProvider(new Ext.state.CookieProvider());
           
            //第一个参数是数据库里配置的表格名称，第二个参数是表格的布局,第三个参数为表格高度
            var ${pcode}Grid = new JSNavigatorGrid('${masterGridcode}','north',200);
             var ${pcode}DetailGrid = new JSNavigatorGrid('${detailGridcode}','center');
              //第一个参数是表格对象，第二个参数是取表格的某列信息，第三个参数是细单表格的外键关系，一般第二，第三个参数保持一致
             ${pcode}DetailGrid.setMasterTache(${pcode}Grid,'${masterPrimary}','${masterPrimary}');
             masterDtlGridIntf = new MasterDtlGridIntf(${pcode}Grid,${pcode}DetailGrid);
             masterDtlGridIntf.init(_initReply);
             function _initReply(){
             
             	  advquery = new QueryParam('func-${pcode}-queryparam',${pcode}Grid,'${masterPrimary}',${pcode}DetailGrid,'${detailPrimary}','0',_initqpReply);
		          	function _initqpReply(){
		           //第一个参数是工具栏的DIV对应的ID，第二个参数是数据库配置的工具栏编码
	             	new ToolbarMenu('mainToolbar','${menu}');         
		          	}
             
                  ${pcode}Grid.grid.on('rowdblclick',function(){//
                       var url = base + '${dblclickEntry}?moduleid=${moduleid}';
                       var urlParams = new Array();//多个动态参数可采取此方法，固定的可直接在url里绑定
                       urlParams.push('${masterPrimary}:${masterPrimary}');//表示url请求中参数值为purconid,值取表格中的purconid;
                       masterDtlGridIntf.ondblclick(url,urlParams);
                      });
                viewLayout = new Ext.Viewport({
                 layout: 'border',
                 items: [
                  {
                     region: 'north',
//                      contentEl: 'north',
                      height:30,
                      layout:'fit',
                     margins: '0 0 0 0'
                 },
                 {
                 region: 'center',
//                  collapsible: true,
                  split:true,
                    margins:'0 0 0 0',
                  layout:'fit',
                   items:  new Ext.Panel({region:'center',layout:'border',items:[
                           {
			                   		region: 'north',
			                   		height:300,
			                   		layout:'fit',
			                   		split: true,
			                        items:[${pcode}Grid.grid]
			                 },
			                 {
			                   		region: 'center',
			                   		layout:'fit',
			                   		split: true,
			                        items:[${pcode}DetailGrid.grid]
			                }
                           ]
                      })
                  }
                 ]
             });
            }
            }
         }
     }
 ();
 //加载onReady
 Ext.onReady(LayoutExt.init, LayoutExt, true);

function doAppend(tb){
 var url = base + '${appendEntry}?status=append&moduleid='+tb.id;
 masterDtlGridIntf.doAppend(url);
}
function _doSaveReply(conditions){//弹出窗口保存后调用此方法关闭新建窗口
   masterDtlGridIntf._doSaveReply(conditions);
 }
function doEdit(tb){
  var url = base + '${editEntry}?status=edit&moduleid='+tb.id;
  var urlParams = new Array();//多个动态参数可采取此方法，固定的可直接在url里绑定
  urlParams.push('${masterPrimary}:${masterPrimary}');//表示url请求中参数值为${masterPrimary},值取表格中的${masterPrimary};
  masterDtlGridIntf.doEdit(url,urlParams);
}
function doDelete(tb){
  masterDtlGridIntf.doDelete(tb.id,'${masterTableName}','${masterPrimary}','${detailTableName}','${detailPrimary}');
}
function doWindowRefresh(){
  window.location.reload();
}
function doDownLoad(tb){
   masterDtlGridIntf.doDownLoad(tb.id);
}
function doNorQuery(){
  advquery.advwin.show();
// var conditions = new Array();
  #foreach ($a in $dataitems)
  #set($fieldName = $a.getCode().toLowerCase())
  #if($a.getValidataTypecfg().equals($DATA_TYPE_INT) || $a.getValidataTypecfg().equals($DATA_TYPE_FLOAT))
// if(${norQueryForm}.${fieldName}.value != null
//    && ${norQueryForm}.${fieldName}.value != ''){
//          var  condition = ceq('${fieldName}',${norQueryForm}.${fieldName}.value);
//          conditions.push(condition);
//    }
 #elseif($a.getValidataTypecfg().equals($DATA_TYPE_DATE))
// if(${norQueryForm}.${fieldName}.value != null
//   && ${norQueryForm}.${fieldName}.value != ''){
//          var  condition = cbigEqual('${fieldName}',${norQueryForm}.${fieldName}.value);
//          conditions.push(condition);
//    }
 #else
// if(${norQueryForm}.${fieldName}.value != null
//  && ${norQueryForm}.${fieldName}.value != ''){
//          var  condition = clike('${fieldName}',${norQueryForm}.${fieldName}.value);
//          conditions.push(condition);
//  }
  #end
  #end
//  masterDtlGridIntf.doQuery(conditions);
}
function doClearQueryForm(){
    ${norQueryForm}.reset();
}