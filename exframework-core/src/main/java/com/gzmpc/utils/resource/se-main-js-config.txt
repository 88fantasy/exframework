#set($pcode = $projectcode)
#set($datasource = $tableName)
#set($gridcode = $projectGridcode)
#set($primarykey = $tablePrimarykey)
#set($menu = $menucode)
#set($editForm = $projectEditForm)
#set($norQueryForm = $projectNorQueryForm)
var dbEditGrid;
var advquery;
LayoutExt = function(){
      return {
          init: function(){
           //  Ext.state.Manager.setProvider(new Ext.state.CookieProvider());
           
            //第一个参数是数据库里配置的表格名称，第二个参数是表格的布局,第三个参数为表格高度
           var ${pcode}Grid = new JSNavigatorGrid('${gridcode}','center');
            ${pcode}Grid.init(_initReply);
            function _initReply(){
            
            	advquery = new QueryParam('func-${pcode}-queryparam',${pcode}Grid,'${primarykey}',null,null,'0',_initqpReply);
	          	function _initqpReply(){
	           //第一个参数是工具栏的DIV对应的ID，第二个参数是数据库配置的工具栏编码
             	new ToolbarMenu('mainToolbar','${menu}');         
	          	}
            
            
               //第一个参数是数据库的表名(则需要进行操作的表)，第二个参数是读取数据时取的视图名，第三个是主键
              var dwrobj = new JdbcTableOperImpl('${datasource}','${datasource}','${primarykey}');
              dwrobj.init();
              var editForm = new EditForm(${editForm},dwrobj);
              //第一个参数是表格对象，第二个参数是取表格的某列信息，第三个参数是editForm取数据的主键关系，一般第二，第三个参数保持一致
              editForm.setMasterTache(${pcode}Grid,'${primarykey}','${primarykey}');
              dbEditGrid = new DBEditGrid(${pcode}Grid, editForm);
              dbEditGrid.init();
                viewLayout = new Ext.Viewport({
                 layout: 'border',
                 items: [
                  {
                      region: 'north',
                      contentEl: 'north',
                      height:30,
                      layout:'fit',
                      margins: '0 0 0 0'
                 },
                 {
                 region: 'center',
//                  collapsible: true,
                  split:true,
                    margins:'0 0 0 0',
                  layout:'fit',
                   items:[${pcode}Grid.grid]
                  },
                  {
                     region: 'south',
                     contentEl: 'south',
                       frame:true,
                       layout:'fit',
                     split: true,
                      height:100,
                       autoScroll : true,
                      collapsible: false,
                     margins: '0 0 0 0'
                 }
                 ]
             });
             dbEditGrid.setViewLayout(viewLayout);//绑定布局，主要是为了新增、修改自动伸展。没有绑定则不会有特效
            }
         }
     };
 }
 ();
 //加载onReady
 Ext.onReady(LayoutExt.init, LayoutExt, true);

function doAppend(tb){
  var moduleid = tb.id;
  dbEditGrid.doAppend(moduleid);
}
function doEdit(tb){
  var moduleid = tb.id;
  dbEditGrid.doEdit(moduleid);
}
function doDelete(tb){
   var moduleid = tb.id;
  dbEditGrid.doDelete(moduleid);
}
function doWindowRefresh(){
  window.location.reload();
}
function doSave(tb){
  var moduleid = tb.id;
  dbEditGrid.doSave(moduleid);
}
function doDownLoad(tb){
   var moduleid = tb.id;
   dbEditGrid.doDownLoad(moduleid);
}
function doNorQuery(){
  advquery.advwin.show();
// var conditions = new Array();
  #foreach ($a in $dataitems)
  #set($fieldName = $a.getCode().toLowerCase())
  #if($a.getValidataTypecfg().equals($DATA_TYPE_INT) || $a.getValidataTypecfg().equals($DATA_TYPE_FLOAT))
// if(${norQueryForm}.${fieldName}.value != null
//    && ${norQueryForm}.${fieldName}.value != ''){
//          var  condition = ceq('${fieldName}',${norQueryForm}.${fieldName}.value);
//          conditions.push(condition);
//    }
 #elseif($a.getValidataTypecfg().equals($DATA_TYPE_DATE))
// if(${norQueryForm}.${fieldName}.value != null
//   && ${norQueryForm}.${fieldName}.value != ''){
//          var  condition = cbigEqual('${fieldName}',${norQueryForm}.${fieldName}.value);
//          conditions.push(condition);
//    }
 #else
// if(${norQueryForm}.${fieldName}.value != null
//  && ${norQueryForm}.${fieldName}.value != ''){
//          var  condition = clike('${fieldName}',${norQueryForm}.${fieldName}.value);
//          conditions.push(condition);
//  }
  #end
  #end
//   dbEditGrid.doQuery(conditions);
}
function doClearQueryForm(){
  ${norQueryForm}.reset();
}
